# Your Discord bot details.
# Follow guide at https://discordtickets.app/self-hosting/installation/docker/#creating-the-discord-application
# to see where to get these values.
# Your redirect URI would be https://tickets.yourdomain.com/auth/callback
DISCORD_SECRET=
DISCORD_TOKEN=

# Generate an encryption key using the command:
# openssl rand -hex 32
ENCRYPTION_KEY=

# Comma separated list to define super users. (users who have elevated privileges)
# You can find your user ID by right clicking your name in Discord and clicking "Copy ID" (Assuming Developer Mode is enabled)
# You should set this to your own user ID.
SUPER_USERS=

# Make sure the permissions of the ${DOCKER_DATA_DIR}/discord-tickets are set to the correct permissions. 
# After starting discord-tickets, run this command to check what user it is
# sudo docker exec -it discord-tickets id
# You'll see a uid and gid, which you can use to set the permissions using the command:
# sudo chown -R <uid>:<gid> ${DOCKER_DATA_DIR}/discord-tickets
# For oracle users, it will likely be 1001:1001, and otherwise it would be 1000:1000.

# After starting the bot, and it is healthy, we need to publish its commands. 
# First, find the container ID of the discord-tickets container using:
# sudo docker ps --filter name=discord-tickets
# Then run the following commands to publish the commands:
# sudo docker attach <container_id>
# commands publish

# Follow https://discordtickets.app/configuration/ 
# to add the bot to your server and configure it.

# Make sure to 
# Can be left as is as our database is not exposed.
MYSQL_PASSWORD=insecure
MYSQL_ROOT_PASSWORD=insecure