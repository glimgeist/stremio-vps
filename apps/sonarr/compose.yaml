services:
  sonarr:
    container_name: sonarr
    expose:
      - 8989
    image: ghcr.io/hotio/sonarr:release
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`${SONARR_HOSTNAME}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr.middlewares=authelia@docker"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    volumes:
      - /mnt:/mnt:rslave
      - ${DOCKER_DATA_DIR}/sonarr/default:/config
      - /usr/bin/rclone:/usr/bin/rclone
    depends_on:
      - rclone
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8989/ping | grep -q '\"status\": \"OK\"' || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 10s
    profiles:
      - debrid_media_server
      - all

  sonarr4k:
    container_name: sonarr4k
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    expose:
      - 8989
    image: ghcr.io/hotio/sonarr:release
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr4k.rule=Host(`${SONARR4K_HOSTNAME}`)"
      - "traefik.http.routers.sonarr4k.entrypoints=websecure"
      - "traefik.http.routers.sonarr4k.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarr4k.middlewares=authelia@docker"
      - "traefik.http.services.sonarr4k.loadbalancer.server.port=8989"
    volumes:
      - /mnt:/mnt:rslave
      - ${DOCKER_DATA_DIR}/sonarr/4k:/config
      - /usr/bin/rclone:/usr/bin/rclone
    depends_on:
      - rclone
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8989/ping | grep -q '\"status\": \"OK\"' || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 10s
    profiles:
      - sonarr
      - debrid_media_server
      - all


  sonarranime:
    container_name: sonarranime
    expose:
      - 8989
    image: ghcr.io/hotio/sonarr:release
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarranime.rule=Host(`${SONARRANIME_HOSTNAME}`)"
      - "traefik.http.routers.sonarranime.entrypoints=websecure"
      - "traefik.http.routers.sonarranime.tls.certresolver=letsencrypt"
      - "traefik.http.routers.sonarranime.middlewares=authelia@docker"
      - "traefik.http.services.sonarranime.loadbalancer.server.port=8989"
    volumes:
      - /mnt:/mnt:rslave
      - ${DOCKER_DATA_DIR}/sonarr/anime:/config
      - /usr/bin/rclone:/usr/bin/rclone
    depends_on:
      - sonarr
      - rclone
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8989/ping | grep -q '\"status\": \"OK\"' || exit 1"]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 10s
    profiles:
      - debrid_media_server
      - all


      
